1.  Inicio
2.  funcion principal()
3.      tabla, i[0-n]
4.      valorLimite, i[0-n]
5.      cont, i[1-n]
6.      valorLimite <-- 10
7.      Para (cont <-- 1; cont <=10; cont++)
8.        obtenerTabla(cont, valorLimite) // (1, 10)
                                          // (2, 10)
	                                  // (3, 10)					
9.      FinPara
10.  fin funcion principal 
11. // se define un método o función

12.  funcion obtenerTabla(tabla, i; limite, i)  // tabla:1 limite:10 // tabla:2 limite: 10
13.     contador, i[0-n] <-- 1
14.     operacion, i[0-n]
15.     mensaje, x(200)[{a-b}, {BS}, {*, =}] <-- ""

16.     Mientras(contador<=limite) entonces 	// 1<=10 // 2<=10 // 3<=10 // 4<=10 // 5<=10 // 6<=10 // 7<=10 // 8<=10 // 9<=10 // 10<=10 // 11<=10|f 
						// 1<=10 // 2<=10 // 3<=10 // 4<=10 // 5<=10 // 6<=10 // 7<=10 // 8<=10 // 9<=10 // 10<=10 // 11<=10|f 
17.       operacion <-- tabla * contador 
					// 1*1 // 1	// 2*1 // 2
					// 1*2 // 2	// 2*2 // 4
					// 1*3 // 3	// 2*3 // 6
					// 1*4 // 4	// 2*4 // 8
					// 1*5 // 5	// 2*5 // 10
					// 1*6 // 6	// 2*6 // 12
					// 1*7 // 7	// 2*7 // 14
					// 1*8 // 8	// 2*8 // 16
					// 1*9 // 9	// 2*8 // 18
					// 1*10 //10 	// 2*10 //20
18.       mensaje <-- mensaje + tabla + " * " + contador " = " + operacion "\n"
                      								//"" 1 * 1 = 1 "\n"
                      								//1 * 1 = 1 "\n"  1 * 2 = 2 "\n" 
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n" 1 * 7 = 7 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n" 1 * 7 = 7 "\n" 1 * 8 = 8 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n" 1 * 7 = 7 "\n" 1 * 8 = 8 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n" 1 * 7 = 7 "\n" 1 * 8 = 8 "\n" 1 * 9 = 9 "\n"
										//1 * 1 = 1 "\n"  1 * 2 = 2 "\n"  1 * 3 = 3 "\n" 1 * 4 = 4 "\n" 1 * 5 = 5 "\n" 1 * 6 = 6 "\n" 1 * 7 = 7 "\n" 1 * 8 = 8 "\n" 1 * 9 = 9 "\n" 1 * 10 = 10 "\n"

										//"" 2 * 1 = 1 "\n"
                      								//2 * 1 = 2 "\n"  2 * 2 = 4 "\n" 
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n" 2 * 7 = 14 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n" 2 * 7 = 14 "\n" 2 * 8 = 16 "\n" 										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n" 2 * 7 = 14 "\n" 2 * 8 = 8 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n" 2 * 7 = 14 "\n" 2 * 8 = 16 "\n" 2 * 9 = 18 "\n"
										//2 * 1 = 2 "\n"  2 * 2 = 4 "\n"  2 * 3 = 6 "\n" 2 * 4 = 8 "\n" 2 * 5 = 10 "\n" 2 * 6 = 12 "\n" 2 * 7 = 14 "\n" 2 * 8 = 16 "\n" 2 * 9 = 18 "\n" 2 * 10 = 20 "\n"


19.       contador <-- contador + 1 	// 2 // 3 // 4 // 5 // 6 // 7 // 8 // // 9 // // 10 //  11
					// 2 // 3 // 4 // 5 // 6 // 7 // 8 // // 9 // // 10 //  11
20.     Fin Mientras

21.     Escribir mensaje
22.  fin funcion obtenerTabla
23. Fin

/
